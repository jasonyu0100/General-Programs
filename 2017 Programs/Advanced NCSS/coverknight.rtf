{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 size = int(input("Size: "))\
max_move = int(input("Moves: "))\
knight_x,knight_y = [int(i) for i in input("Knight: ").split(',')]\
\
grid = [['.' for i in range(size)] for i in range(size)]\
grid[knight_x][knight_y] = 0\
def display_grid(grid):\
  for row in grid:\
    print(' '.join([str(i) for i in row]))\
\
def knight_move(coordinate,cur_move):\
  if cur_move > max_move:\
    cur_move -= 1\
    return\
  x_coord = coordinate[0]\
  y_coord = coordinate[1]\
  possible_moves = [(+2,+1),(+2,-1),(-2,+1),(-2,-1),(+1,+2),(-1,+2),(+1,-2),(-1,-2)]\
  legal_moves = [(x_coord+x_change,y_coord+y_change) for x_change,y_change in possible_moves if all([0<=(x_coord+x_change)<len(grid),0<=(y_coord+y_change)<len(grid)])]\
  for coordinate in legal_moves:\
    if grid[coordinate[0]][coordinate[1]] == '.':\
      grid[coordinate[0]][coordinate[1]] = cur_move\
    elif grid[coordinate[0]][coordinate[1]] > cur_move:\
      grid[coordinate[0]][coordinate[1]] = cur_move\
    else:\
      continue\
    knight_move(coordinate,cur_move+1)\
  return\
knight_move((knight_x,knight_y),1)\
display_grid(grid)}
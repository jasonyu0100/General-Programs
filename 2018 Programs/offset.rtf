{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 import string\
alphabet = string.ascii_lowercase\
charToNum = dict(zip(alphabet,range(0,26)))\
numToChar = dict(zip(range(0,26),alphabet))\
def polyAlphabetic(sentence):\
  newSentence = ''\
  previousLetterOffSet = None\
  sentence = list(sentence)\
  for char in sentence:\
    if char.isalpha():\
      upperCase = char.isupper()\
      if previousLetterOffSet is None:\
        if upperCase:\
          char = char.upper()\
        newSentence += char\
        previousLetterOffSet = charToNum[char.lower()]\
      else:\
        currentLetterNum = charToNum[char.lower()]\
        newLetter = numToChar[(currentLetterNum - previousLetterOffSet) % 26]\
        previousLetterOffSet = charToNum[newLetter.lower()]\
        if upperCase:\
          newLetter = newLetter.upper()\
        newSentence += newLetter\
    else:\
      newSentence += char\
  return newSentence\
\
message = input("Enter encrypted message: ")\
      \
print(polyAlphabetic(message))}